(function() {var implementors = {};
implementors["usrnet"] = ["impl&lt;I:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/iterator/trait.Iterator.html\" title=\"trait core::iter::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;I&gt; for <a class=\"struct\" href=\"usrnet/core/check/struct.ByteOrderIter.html\" title=\"struct usrnet::core::check::ByteOrderIter\">ByteOrderIter</a>&lt;I&gt;","impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">&amp;'a [</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"usrnet/core/check/struct.ByteOrderIter.html\" title=\"struct usrnet::core::check::ByteOrderIter\">ByteOrderIter</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/iter/struct.Cloned.html\" title=\"struct core::iter::Cloned\">Cloned</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/struct.Iter.html\" title=\"struct core::slice::Iter\">SliceIter</a>&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;&gt;","impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"usrnet/core/repr/ipv4/struct.Address.html\" title=\"struct usrnet::core::repr::ipv4::Address\">Address</a>","impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/net/ip/struct.Ipv4Addr.html\" title=\"struct std::net::ip::Ipv4Addr\">StdIpv4Addr</a>&gt; for <a class=\"struct\" href=\"usrnet/core/repr/ipv4/struct.Address.html\" title=\"struct usrnet::core::repr::ipv4::Address\">Address</a>","impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/net/addr/struct.SocketAddrV4.html\" title=\"struct std::net::addr::SocketAddrV4\">SocketAddrV4</a>&gt; for <a class=\"struct\" href=\"usrnet/core/socket/bindings/struct.SocketAddr.html\" title=\"struct usrnet::core::socket::bindings::SocketAddr\">SocketAddr</a>","impl&lt;T:&nbsp;<a class=\"trait\" href=\"usrnet/core/time/trait.Env.html\" title=\"trait usrnet::core::time::Env\">TimeEnv</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"usrnet/core/socket/tcp/state/struct.TcpClosed.html\" title=\"struct usrnet::core::socket::tcp::state::TcpClosed\">TcpClosed</a>&lt;T&gt;&gt; for <a class=\"enum\" href=\"usrnet/core/socket/tcp/state/enum.TcpState.html\" title=\"enum usrnet::core::socket::tcp::state::TcpState\">TcpState</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class=\"trait\" href=\"usrnet/core/time/trait.Env.html\" title=\"trait usrnet::core::time::Env\">TimeEnv</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"usrnet/core/socket/tcp/state/struct.TcpSynSent.html\" title=\"struct usrnet::core::socket::tcp::state::TcpSynSent\">TcpSynSent</a>&lt;T&gt;&gt; for <a class=\"enum\" href=\"usrnet/core/socket/tcp/state/enum.TcpState.html\" title=\"enum usrnet::core::socket::tcp::state::TcpState\">TcpState</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class=\"trait\" href=\"usrnet/core/time/trait.Env.html\" title=\"trait usrnet::core::time::Env\">TimeEnv</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"usrnet/core/socket/tcp/state/struct.TcpEstablished.html\" title=\"struct usrnet::core::socket::tcp::state::TcpEstablished\">TcpEstablished</a>&lt;T&gt;&gt; for <a class=\"enum\" href=\"usrnet/core/socket/tcp/state/enum.TcpState.html\" title=\"enum usrnet::core::socket::tcp::state::TcpState\">TcpState</a>&lt;T&gt;","impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"usrnet/core/storage/ring/struct.Ring.html\" title=\"struct usrnet::core::storage::ring::Ring\">Ring</a>&lt;T&gt;","impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"usrnet/core/storage/slice/struct.Slice.html\" title=\"struct usrnet::core::storage::slice::Slice\">Slice</a>&lt;T&gt;","impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">IOError</a>&gt; for <a class=\"enum\" href=\"usrnet/enum.Error.html\" title=\"enum usrnet::Error\">Error</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
